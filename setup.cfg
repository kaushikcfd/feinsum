# This file is used to configure your project.
# Read more about the various options under:
# https://setuptools.pypa.io/en/latest/userguide/declarative_config.html
# https://setuptools.pypa.io/en/latest/references/keywords.html

[metadata]
name = feinsum
description = Fast(er?) Einsum
author = Kaushik Kulkarni
author_email = kaushikcfd@gmail.com
license = MIT
license_files = LICENSE.txt
long_description = file: README.rst
long_description_content_type = text/x-rst; charset=UTF-8
url = https://github.com/kaushikcfd/feinsum/
version = attr: VERSION.VERSION
# Add here related links, for example:
# project_urls =
#    Documentation = https://pyscaffold.org/
#    Source = https://github.com/pyscaffold/pyscaffold/
#    Changelog = https://pyscaffold.org/en/latest/changelog.html
#    Tracker = https://github.com/pyscaffold/pyscaffold/issues
#    Conda-Forge = https://anaconda.org/conda-forge/pyscaffold
#    Download = https://pypi.org/project/PyScaffold/#files
#    Twitter = https://twitter.com/PyScaffold

# Change if running only on Windows, Mac or Linux (comma-separated)
platforms = any

# Add here all kinds of additional classifiers as defined under
# https://pypi.org/classifiers/
classifiers =
    Development Status :: 4 - Beta
    Programming Language :: Python :: 3
    Intended Audience :: Science/Research
    Topic :: Scientific/Engineering :: Mathematics
    Topic :: Scientific/Engineering
    Topic :: Software Development :: Libraries


[options]
zip_safe = False
packages = find_namespace:
include_package_data = True
package_dir =
    =src
# Require a min/specific Python version (comma-separated conditions)
python_requires = >=3.8
# Add here dependencies of your project (line-separated), e.g. requests>=2.2,<3.0.
# Version specifiers like >=2.2,<3.0 avoid problems due to API changes in
# new major versions. This works if the required packages follow Semantic Versioning.
# For more information, check out https://semver.org/.
install_requires =
    numpy>=1.20
    loopy
    pytools
    islpy
    pyrsistent
    more-itertools
    pytz

[options.package_data]
feinsum = py.typed

[options.packages.find]
where = src
exclude =
    test

[options.extras_require]
# Add here additional requirements for extra features, to install with:
# `pip install feinsum[PDF]` like:
# PDF = ReportLab; RXP

# Add here test requirements (semicolon/line-separated)
testing =
    setuptools
    pytest

[options.entry_points]
# Add here console scripts like:
# console_scripts =
#     script_name = feinsum.module:function
# For example:
# console_scripts =
#     fibonacci = feinsum.skeleton:run
# And any other entry points, for example:

[tool:pytest]
# Specify command line options as you would do when invoking pytest directly.
# e.g. --cov-report html (or xml) for html/xml output or --junitxml junit.xml
# in order to write a coverage file that can be read by Jenkins.
addopts =
    --verbose
norecursedirs =
    dist
    build
    .tox
testpaths = test
# Use pytest markers to select/deselect specific tests
# markers =
#     slow: mark tests as slow (deselect with '-m "not slow"')
#     system: mark end-to-end system tests

[devpi:upload]
# Options for the devpi: PyPI server and packaging tool
# VCS export must be deactivated since we are using setuptools-scm
no_vcs = 1
formats = bdist_wheel

# Some sane defaults for the code style checker flake8
[flake8]
ignore = E126,E127,E128,E123,E226,E241,E242,E265,N802,W503,E402,N806,N814,N817,W504
max-line-length=85

inline-quotes = "
docstring-quotes = """
multiline-quotes = """
exclude =
    build
    dist
    .eggs
    doc/conf.py



[mypy]

[mypy-islpy]
ignore_missing_imports = True

[mypy-loopy.*]
ignore_missing_imports = True

[mypy-numpy]
ignore_missing_imports = True

[mypy-pymbolic.*]
ignore_missing_imports = True

[mypy-pyopencl.*]
ignore_missing_imports = True

[mypy-opt_einsum.*]
ignore_missing_imports = True
